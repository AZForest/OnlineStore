[{"/Users/alexforest/Desktop/OnlineStore/src/index.js":"1","/Users/alexforest/Desktop/OnlineStore/src/reportWebVitals.js":"2","/Users/alexforest/Desktop/OnlineStore/src/App.js":"3","/Users/alexforest/Desktop/OnlineStore/src/store/reducer.js":"4","/Users/alexforest/Desktop/OnlineStore/src/store/actions/actionTypes.js":"5","/Users/alexforest/Desktop/OnlineStore/src/containers/Home/Home.js":"6","/Users/alexforest/Desktop/OnlineStore/src/containers/Auth/Auth.js":"7","/Users/alexforest/Desktop/OnlineStore/src/hoc/Layout/Layout.js":"8","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Fruit/Fruit.js":"9","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Frozen/Frozen.js":"10","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Bakery/Bakery.js":"11","/Users/alexforest/Desktop/OnlineStore/src/containers/User/Cart/Cart.js":"12","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Vegetables/Vegetables.js":"13","/Users/alexforest/Desktop/OnlineStore/src/containers/User/Account/Account.js":"14","/Users/alexforest/Desktop/OnlineStore/src/components/UI/Input/Input.js":"15","/Users/alexforest/Desktop/OnlineStore/src/components/BottomBar/BottomBar.js":"16","/Users/alexforest/Desktop/OnlineStore/src/components/UI/ProductModel/ProductModel.js":"17","/Users/alexforest/Desktop/OnlineStore/src/components/UI/HomeItem/HomeItem.js":"18","/Users/alexforest/Desktop/OnlineStore/src/components/UI/Order/Order.js":"19","/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/Navbar/Navbar.js":"20","/Users/alexforest/Desktop/OnlineStore/src/components/UI/CartItem/CartItem.js":"21","/Users/alexforest/Desktop/OnlineStore/src/components/UI/Modal/Modal.js":"22","/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"23"},{"size":815,"mtime":1611767986651,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611636164098,"results":"26","hashOfConfig":"25"},{"size":3031,"mtime":1617309503316,"results":"27","hashOfConfig":"25"},{"size":1412,"mtime":1612853972923,"results":"28","hashOfConfig":"25"},{"size":560,"mtime":1612852676368,"results":"29","hashOfConfig":"25"},{"size":3082,"mtime":1617309778164,"results":"30","hashOfConfig":"25"},{"size":6488,"mtime":1617309648524,"results":"31","hashOfConfig":"25"},{"size":479,"mtime":1617309878283,"results":"32","hashOfConfig":"25"},{"size":7147,"mtime":1614364581335,"results":"33","hashOfConfig":"25"},{"size":7017,"mtime":1614365143352,"results":"34","hashOfConfig":"25"},{"size":6911,"mtime":1614364581334,"results":"35","hashOfConfig":"25"},{"size":7636,"mtime":1614622134412,"results":"36","hashOfConfig":"25"},{"size":6787,"mtime":1614365067201,"results":"37","hashOfConfig":"25"},{"size":2176,"mtime":1613846530086,"results":"38","hashOfConfig":"25"},{"size":703,"mtime":1611810905642,"results":"39","hashOfConfig":"25"},{"size":369,"mtime":1613671601005,"results":"40","hashOfConfig":"25"},{"size":1073,"mtime":1613104011696,"results":"41","hashOfConfig":"25"},{"size":369,"mtime":1613241306637,"results":"42","hashOfConfig":"25"},{"size":891,"mtime":1614015049736,"results":"43","hashOfConfig":"25"},{"size":2475,"mtime":1617309694450,"results":"44","hashOfConfig":"25"},{"size":560,"mtime":1613238211162,"results":"45","hashOfConfig":"25"},{"size":620,"mtime":1613517300461,"results":"46","hashOfConfig":"25"},{"size":391,"mtime":1611861053679,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"6ey0lh",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexforest/Desktop/OnlineStore/src/index.js",[],["104","105"],"/Users/alexforest/Desktop/OnlineStore/src/reportWebVitals.js",[],"/Users/alexforest/Desktop/OnlineStore/src/App.js",["106","107"],"\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Layout from './hoc/Layout/Layout';\nimport { Route, Switch } from 'react-router-dom';\nimport Fruit from './containers/Products/Fruit/Fruit';\nimport Frozen from './containers/Products/Frozen/Frozen';\nimport Vegetables from './containers/Products/Vegetables/Vegetables';\nimport Bakery from './containers/Products/Bakery/Bakery';\nimport Home from './containers/Home/Home';\nimport Auth from './containers/Auth/Auth';\nimport Cart from './containers/User/Cart/Cart';\nimport Account from './containers/User/Account/Account';\nimport * as actionTypes from './store/actions/actionTypes';\nimport { connect } from 'react-redux';\n\n\nclass App extends React.Component {\n\n  /* useEffect(() => {\n      axios.get('http://localhost:3005/products')\n      .then(response => {\n          console.log(response);\n          props.onInitProducts(response);\n      })\n      .catch(err => console.log(err))\n  }, []) */\n  componentDidMount() {\n    axios.get('https://onlinestoreserver.herokuapp.com/products')\n      .then(response => {\n          console.log(response.data);\n          this.props.onInitProducts(response.data);\n          localStorage.setItem('products', JSON.stringify(response.data));\n      })\n      .catch(err => console.log(err))\n\n      if (localStorage.getItem('user') !== null) {\n          axios.get('http://onlinestoreserver.herokuapp.com/users')\n          .then(response => {\n            for (let i = 0; i < response.data.length; i++) {\n              //console.log(localStorage.getItem('user'));\n              if (response.data[i].userName === localStorage.getItem('user')) {\n                this.props.onAuth(response.data[i].userName, response.data[i].password, response.data[i].orders, response.data[i].cart, response.data[i]._id);\n              }\n            }\n          })\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Switch>\n            <Route path=\"/OnlineStore\" exact component={Home}/>\n            <Route path=\"/OnlineStore/Fruit\" component={Fruit}/>\n            <Route path=\"/OnlineStore/Frozen\" component={Frozen}/>\n            <Route path=\"/OnlineStore/Vegetables\" component={Vegetables}/>\n            <Route path=\"/OnlineStore/Bakery\" component={Bakery}/>\n            <Route path=\"/OnlineStore/Auth\" component={Auth}/>\n            <Route path=\"/OnlineStore/Cart\" component={Cart}/>\n            <Route path=\"/OnlineStore/Account\" component={Account}/>\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n\n  \n}\n\nconst mapStateToProps = dispatch => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onInitProducts: (productsArr) => dispatch({type: actionTypes.INIT_PRODUCTS, productsArr}),\n      onAuth: (name, password, orders, cart, id) => dispatch({type: actionTypes.ACTIVATE_USER, userData: { userName: name, password: password, orders: orders, cart: cart, id: id } })\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\n","/Users/alexforest/Desktop/OnlineStore/src/store/reducer.js",["108"],"import * as actionTypes from './actions/actionTypes';\n\nconst initialState = {\n    products: null,\n    activeUser: null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_PRODUCTS:\n            return {\n                ...state,\n                products: action.productsArr\n            }\n        case actionTypes.ACTIVATE_USER:\n            return {\n                ...state,\n                activeUser: action.userData\n            }\n        case actionTypes.LOGOUT_USER:\n            return {\n                ...state,\n                activeUser: null\n            }\n        case actionTypes.UPDATE_CART:\n            return {\n                ...state,\n                activeUser: action.account\n            }\n        case actionTypes.RESET_CART:\n            console.log(\"reset\");\n            return {\n                ...state,\n                activeUser: action.account\n            }\n        /* case actionTypes.ADD_PRODUCT:\n            return {\n                ...state,\n                activeUser: {\n                    userName: this.state.activeUser.userName,\n                    password: this.state.activeUser.password,\n                    orders: this.state.activeUser.orders,\n                    cart: this.state.activeUser.cart.concat(action.product)\n                }\n            } */\n    }\n        \n\n    return state;\n}\n\nexport default reducer;","/Users/alexforest/Desktop/OnlineStore/src/store/actions/actionTypes.js",[],"/Users/alexforest/Desktop/OnlineStore/src/containers/Home/Home.js",["109","110","111","112","113","114"],"import classes from './Home.module.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport homeImg from '../../assets/HomeImages/produceImg.jpeg';\nimport HomeItem from '../../components/UI/HomeItem/HomeItem';\nimport fruitImg from '../../assets/HomeImages/fruitImg.jpeg';\nimport vegImg from '../../assets/HomeImages/vegImg.jpg';\nimport bakeryImg from '../../assets/HomeImages/breadImg.jpg';\nimport frozenImg from '../../assets/HomeImages/frozenImg.jpeg';\nimport eLogo2 from '../../assets/HomeImages/logo.png';\nimport BottomBar from '../../components/BottomBar/BottomBar';\n\nclass Home extends React.Component {\n\n    /* useEffect(() => {\n        axios.get('http://localhost:3005/products')\n        .then(response => {\n            console.log(response);\n        })\n        .catch(err => console.log(err))\n    }, []) */\n    render() {\n        let fruitMsg = \"Fresh Fruit from our local farms\";\n        let vegMsg = \"Locally-grown vegetables\";\n        let bakeryMsg = \"Baked goods including bread and deserts\";\n        let frozenMsg = \"Frozen fruit, vegetables, and more\";\n        return (\n            <React.Fragment>\n                <div className={classes.Home}>\n                    <div className={classes.backDrop}>\n                        <div className={classes.circle1}></div>\n                        <div className={classes.circle2}></div>\n                        <div className={classes.circle3}></div>\n                        <div className={classes.circle4}></div>\n                        <div className={classes.circle5}></div>\n                        <h2><span>e</span>Pr<span>o</span>d<span>u</span>ce</h2>\n                        <img style={{filter: \"grayscale(100%)\"}}src={eLogo2} height={100} width={110}/>\n                        <p className={classes.tag}>Get your produce, bakery, and frozen needs shipped directly to your house in just days.</p>\n                    </div>\n                    <p className={classes.desc}>Check out our Fresh Produce, Bakery Goods, and Frozen Goods below.</p>\n                    {/* <p>Get Started Below</p> */}\n                    <div className={classes.HomeItemContainer}>\n                        <HomeItem type=\"Fruit\" img={fruitImg} click={() => this.props.history.push('/OnlineStore/Fruit')} message={fruitMsg}/>\n                        <HomeItem type=\"Vegetables\" img={vegImg} click={() => this.props.history.push('/OnlineStore/Vegetables')} message={vegMsg}/>\n                        <HomeItem type=\"Bakery\" img={bakeryImg} click={() => this.props.history.push('/OnlineStore/Bakery')} message={bakeryMsg}/>\n                        <HomeItem type=\"Frozen\" img={frozenImg} click={() => this.props.history.push('/OnlineStore/Frozen')} message={frozenMsg}/>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        productsCol: state.products\n    }\n}\n\n/* const mapDispatchToProps = dispatch => {\n\n} */\n\nexport default connect(mapStateToProps)(Home);","/Users/alexforest/Desktop/OnlineStore/src/containers/Auth/Auth.js",[],"/Users/alexforest/Desktop/OnlineStore/src/hoc/Layout/Layout.js",[],"/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Fruit/Fruit.js",["115","116","117","118","119"],"import classes from './Fruit.module.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n// import { remover } from '../../User/Cart/Cart';\nimport Cart, { removeHandler } from '../../User/Cart/Cart';\n//Images\nimport banana from '../../../assets/Fruit/Banana.jpg';\nimport organicBanana from '../../../assets/Fruit/OrganicBanana.jpg';\nimport blackberries from '../../../assets/Fruit/Blackberries.jpg';\nimport blueberries from '../../../assets/Fruit/Blueberries.jpg';\nimport pineapple from '../../../assets/Fruit/FreshPineapple.jpg';\nimport raspberries from '../../../assets/Fruit/Raspberries.jpg';\nimport redGrapes from '../../../assets/Fruit/RedSeedlessGrapes.jpg';\nimport strawberries from '../../../assets/Fruit/Strawberries.jpg';\nimport BottomBar from '../../../components/BottomBar/BottomBar';\n\nclass Fruit extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n        let fruit = [];\n        let products = JSON.parse(localStorage.getItem('products'));\n        console.log(products);\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].type === \"Fruit\") {\n                fruit.push(products[i]);\n            }\n        }\n        console.log(fruit);\n        this.setState({products: fruit})\n    }\n\n\n    addHandler(name, price) {\n        if (this.props.user === null) {\n            window.alert('Please log in or sign up to add items to cart.');\n        } else {\n            let data = {\n                prevCart: this.props.user.cart,\n                product: {\n                    name: name,\n                    price: price,\n                    count: 1\n                },\n                updateCount: false\n            }\n            \n            for (let i = 0; i < data.prevCart.length; i++) {\n                if (data.prevCart[i].name === data.product.name) {\n                    data.updateCount = true;\n                }\n            }\n\n            let updatedAcc;\n            if (!data.updateCount) {\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: this.props.user.cart.concat(data.product)\n                }\n            } else {\n                let element;\n                for (let i = 0; i < this.props.user.cart.length; i++) {\n                    if (this.props.user.cart[i].name === data.product.name) {\n                        element = i;\n                    }\n                }\n                let newAcc = this.props.user.cart;\n                newAcc[element].count += 1;\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: newAcc\n                }\n            }\n            \n\n            axios.patch(`http://localhost:3005/users/${this.props.user.id}/addProduct`, data)\n            .then(response => {\n                console.log(response);\n                this.props.onUpdateCart(updatedAcc);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/removeProduct`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Banana\", img: banana },\n            { name: \"Organic Banana\", img: organicBanana },\n            { name: \"Strawberries\", img: strawberries },\n            { name: \"Blackberries\", img: blackberries },\n            { name: \"Fresh Pineapple\", img: pineapple},\n            { name: \"Red Seedless Grapes\", img: redGrapes },\n            { name: \"Raspberries\", img: raspberries },\n            { name: \"Blueberries\", img: blueberries }\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    countHandler(item) {\n        if (this.props.user !== null) {\n            let userCart = this.props.user.cart;\n            let result = -1;\n            for (let i = 0; i < userCart.length; i++) {\n                if (userCart[i].name === item) {\n                    result = userCart[i].count;\n                }\n            }\n            if (result === -1) {\n                return 0;\n            } else {\n                return result;\n            }\n            //return result[0].count;\n        } else {\n            return 0;\n        }\n    }\n\n    render() {\n        let fruitItems = this.state.products;\n        /* for (let i = 0; i < this.state.products.length; i++) {\n            if (this.state.products[i].type === \"Fruit\") {\n                fruitItems.push(this.state.products[i]);\n            }\n        } */\n\n\n        return (\n            <React.Fragment>\n                <div className={classes.Fruit}>\n                    <h3>Fresh Fruit</h3>\n                    <div className={classes.FruitContainer}>\n                        {fruitItems.map((item, index) => {\n                            return <ProductModel name={item.name}\n                            type={item.type}\n                            price={item.price}\n                            key={item._id}\n                            add={() => this.addHandler(item.name, item.price)}\n                            remove={() => this.removeHandler(item.name, item.price)}\n                            count={this.countHandler(item.name)}\n                            img={this.imageHandler(item.name)}\n                            />;\n                        })}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fruit);","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Frozen/Frozen.js",["120"],"import classes from '../Fruit/Fruit.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n//Images\nimport berryMedley from '../../../assets/Frozen/FrozenBerryMedley.jpg';\nimport blackberries from '../../../assets/Frozen/FrozenBlackberries.jpg';\nimport blueberries from '../../../assets/Frozen/FrozenBlueberries.jpg';\nimport broccoli from '../../../assets/Frozen/FrozenBroccoliFlorets.jpg';\nimport corn from '../../../assets/Frozen/FrozenCorn.jpg';\nimport greenPeas from '../../../assets/Frozen/FrozenGreenPeas.jpg';\nimport mixedVegetables from '../../../assets/Frozen/FrozenMixedVegetables.jpg';\nimport strawberries from '../../../assets/Frozen/FrozenStrawberries.jpg';\n\nclass Frozen extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n        let fruit = [];\n        let products = JSON.parse(localStorage.getItem('products'));\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].type === \"Frozen\") {\n                fruit.push(products[i]);\n            }\n        }\n        this.setState({products: fruit})\n    }\n\n    addHandler(name, price) {\n        if (this.props.user === null) {\n            //this.props.history.push('auth');\n            window.alert('Please log in to add items to cart');\n        } else {\n            let data = {\n                prevCart: this.props.user.cart,\n                product: {\n                    name: name,\n                    price: price,\n                    count: 1\n                },\n                updateCount: false\n            }\n            \n            for (let i = 0; i < data.prevCart.length; i++) {\n                if (data.prevCart[i].name === data.product.name) {\n                    data.updateCount = true;\n                }\n            }\n\n            let updatedAcc;\n            if (!data.updateCount) {\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: this.props.user.cart.concat(data.product)\n                }\n            } else {\n                let element;\n                for (let i = 0; i < this.props.user.cart.length; i++) {\n                    if (this.props.user.cart[i].name === data.product.name) {\n                        element = i;\n                    }\n                }\n                let newAcc = this.props.user.cart;\n                newAcc[element].count += 1;\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: newAcc\n                }\n            }\n            \n\n            axios.patch(`http://localhost:3005/users/${this.props.user.id}/addProduct`, data)\n            .then(response => {\n                console.log(response);\n                this.props.onUpdateCart(updatedAcc);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/removeProduct`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Frozen Berry Medley\", img: berryMedley },\n            { name: \"Frozen Blackberries\", img: blackberries },\n            { name: \"Frozen Blueberries\", img: blueberries },\n            { name: \"Frozen Broccoli Florets\", img: broccoli },\n            { name: \"Frozen Corn\", img: corn },\n            { name: \"Frozen Green Peas\", img: greenPeas },\n            { name: \"Frozen Mixed Vegetables\", img: mixedVegetables },\n            { name: \"Frozen Strawberries\", img: strawberries }\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    countHandler(item) {\n        if (this.props.user !== null) {\n            let userCart = this.props.user.cart;\n            let result = -1;\n            for (let i = 0; i < userCart.length; i++) {\n                if (userCart[i].name === item) {\n                    result = userCart[i].count;\n                }\n            }\n            if (result === -1) {\n                return 0;\n            } else {\n                return result;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    render() {\n        \n        let frozenItems = this.state.products;\n        /* for (let i = 0; i < this.state.products.length; i++) {\n            if (this.state.products[i].type === \"Frozen\") {\n                frozenItems.push(this.state.products[i]);\n            }\n        } */\n\n        return (\n            <div className={classes.Fruit}>\n                <h3>Frozen Fruit and Vegetables</h3>\n                <div className={classes.FruitContainer}>\n                    {frozenItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.addHandler(item.name, item.price)}\n                        remove={() => this.removeHandler(item.name, item.price)}\n                        count={this.countHandler(item.name)}\n                        img={this.imageHandler(item.name)}\n                        />;\n                    })}\n                </div>\n            </div>\n        )\n            \n    } \n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account}),\n        onInitProducts: (productsArr) => dispatch({type: actionTypes.INIT_PRODUCTS, productsArr})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Frozen);","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Bakery/Bakery.js",["121"],"import classes from '../Fruit/Fruit.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n//Images\nimport baguette from '../../../assets/Bakery/Baguette.jpg';\nimport blueberryMuffins from '../../../assets/Bakery/BlueberryMuffins.jpg';\nimport chocolateChipCookies from '../../../assets/Bakery/ChocolateChipCookies.jpg';\nimport ciabattaRolls from '../../../assets/Bakery/CiabattaRolls.jpg';\nimport frenchBread from '../../../assets/Bakery/FrenchBread.jpg';\nimport garlicBread from '../../../assets/Bakery/GarlicBread.jpg';\nimport pumpkinPie from '../../../assets/Bakery/PumpkinPie.jpg';\nimport traditionalBagels from '../../../assets/Bakery/TraditionalBagels.jpg';\n\nclass Bakery extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n        let bakery = [];\n        let products = JSON.parse(localStorage.getItem('products'));\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].type === \"Bakery\") {\n                bakery.push(products[i]);\n            }\n        }\n        this.setState({products: bakery})\n    }\n\n    addHandler(name, price) {\n        if (this.props.user === null) {\n            //this.props.history.push('/auth');\n            window.alert('Please log in or sign up to add items to cart.');\n        } else {\n            let data = {\n                prevCart: this.props.user.cart,\n                product: {\n                    name: name,\n                    price: price,\n                    count: 1\n                },\n                updateCount: false\n            }\n            \n            for (let i = 0; i < data.prevCart.length; i++) {\n                if (data.prevCart[i].name === data.product.name) {\n                    data.updateCount = true;\n                }\n            }\n\n            let updatedAcc;\n            if (!data.updateCount) {\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: this.props.user.cart.concat(data.product)\n                }\n            } else {\n                let element;\n                for (let i = 0; i < this.props.user.cart.length; i++) {\n                    if (this.props.user.cart[i].name === data.product.name) {\n                        element = i;\n                    }\n                }\n                let newAcc = this.props.user.cart;\n                newAcc[element].count += 1;\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: newAcc\n                }\n            }\n            \n\n            axios.patch(`http://localhost:3005/users/${this.props.user.id}/addProduct`, data)\n            .then(response => {\n                console.log(response);\n                this.props.onUpdateCart(updatedAcc);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/removeProduct`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Baguette\", img: baguette },\n            { name: \"Blueberry Muffins\", img: blueberryMuffins },\n            { name: \"Chocolate Chip Cookies\", img: chocolateChipCookies },\n            { name: \"Ciabatta Rolls\", img: ciabattaRolls },\n            { name: \"French Bread\", img: frenchBread },\n            { name: \"Garlic Bread\", img: garlicBread },\n            { name: \"Pumpkin Pie\", img: pumpkinPie },\n            { name: \"Traditional Bagels\", img: traditionalBagels }\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    countHandler(item) {\n        if (this.props.user !== null) {\n            let userCart = this.props.user.cart;\n            let result = -1;\n            for (let i = 0; i < userCart.length; i++) {\n                if (userCart[i].name === item) {\n                    result = userCart[i].count;\n                }\n            }\n            if (result === -1) {\n                return 0;\n            } else {\n                return result;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    render() {\n        let bakeryItems = this.state.products;\n        /* for (let i = 0; i < this.props.productsArr.length; i++) {\n            if (this.props.productsArr[i].type === \"Bakery\") {\n                bakeryItems.push(this.props.productsArr[i]);\n            }\n        } */\n\n        return (\n            <div className={classes.Fruit}>\n                <h3>Fresh Bread and Deserts</h3>\n                <div className={classes.FruitContainer}>\n                    {bakeryItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.addHandler(item.name, item.price)}\n                        remove={() => this.removeHandler(item.name, item.price)}\n                        count={this.countHandler(item.name)}\n                        img={this.imageHandler(item.name)}\n                        />;\n                    })}\n                </div>\n            </div>\n        )\n            \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bakery);","/Users/alexforest/Desktop/OnlineStore/src/containers/User/Cart/Cart.js",[],"/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Vegetables/Vegetables.js",["122"],"import classes from '../Fruit/Fruit.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n//Images\nimport broccoli from '../../../assets/Vegetables/Broccoli.jpg';\nimport celery from '../../../assets/Vegetables/Celery.jpg';\nimport cucumber from '../../../assets/Vegetables/Cucumber.jpg';\nimport greenPepper from '../../../assets/Vegetables/GreenBellPepper.jpg';\nimport redPepper from '../../../assets/Vegetables/RedBellPepper.jpg';\nimport romaTomato from '../../../assets/Vegetables/RomaTomato.jpg';\nimport yellowOnion from '../../../assets/Vegetables/YellowOnion.jpg';\nimport zucchini from '../../../assets/Vegetables/Zucchini.jpg';\n\nclass Vegetables extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n        let fruit = [];\n        let products = JSON.parse(localStorage.getItem('products'));\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].type === \"Vegetable\") {\n                fruit.push(products[i]);\n            }\n        }\n        this.setState({products: fruit})\n    }\n\n    addHandler(name, price) {\n        if (this.props.user === null) {\n            window.alert('Please log in');\n        } else {\n            let data = {\n                prevCart: this.props.user.cart,\n                product: {\n                    name: name,\n                    price: price,\n                    count: 1\n                },\n                updateCount: false\n            }\n            \n            for (let i = 0; i < data.prevCart.length; i++) {\n                if (data.prevCart[i].name === data.product.name) {\n                    data.updateCount = true;\n                }\n            }\n\n            let updatedAcc;\n            if (!data.updateCount) {\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: this.props.user.cart.concat(data.product)\n                }\n            } else {\n                let element;\n                for (let i = 0; i < this.props.user.cart.length; i++) {\n                    if (this.props.user.cart[i].name === data.product.name) {\n                        element = i;\n                    }\n                }\n                let newAcc = this.props.user.cart;\n                newAcc[element].count += 1;\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: newAcc\n                }\n            }\n            \n\n            axios.patch(`http://localhost:3005/users/${this.props.user.id}/addProduct`, data)\n            .then(response => {\n                console.log(response);\n                this.props.onUpdateCart(updatedAcc);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/removeProduct`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Broccoli\", img: broccoli },\n            { name: \"Celery\", img: celery },\n            { name: \"Cucumber\", img: cucumber },\n            { name: \"Green Bell Pepper\", img: greenPepper },\n            { name: \"Red Bell Pepper\", img: redPepper },\n            { name: \"Roma Tomato\", img: romaTomato },\n            { name: \"Yellow Onion\", img: yellowOnion },\n            { name: \"Zucchini\", img: zucchini }\n\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    countHandler(item) {\n        if (this.props.user !== null) {\n            let userCart = this.props.user.cart;\n            let result = -1;\n            for (let i = 0; i < userCart.length; i++) {\n                if (userCart[i].name === item) {\n                    result = userCart[i].count;\n                }\n            }\n            if (result === -1) {\n                return 0;\n            } else {\n                return result;\n            }\n            //return result[0].count;\n        } else {\n            return 0;\n        }\n    }\n\n    render() {\n        let vegetableItems = this.state.products;\n        /* for (let i = 0; i < this.props.productsArr.length; i++) {\n            if (this.props.productsArr[i].type === \"Vegetable\") {\n                vegetableItems.push(this.props.productsArr[i]);\n            }\n        } */\n\n        return (\n            \n            <div className={classes.Fruit}>\n                <h3>Vegetables</h3>\n                <div className={classes.FruitContainer}>\n                    {vegetableItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.addHandler(item.name, item.price)}\n                        remove={() => this.removeHandler(item.name, item.price)}\n                        count={this.countHandler(item.name)}\n                        img={this.imageHandler(item.name)}\n                        />;\n                    })}\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vegetables);","/Users/alexforest/Desktop/OnlineStore/src/containers/User/Account/Account.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/Input/Input.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/BottomBar/BottomBar.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/ProductModel/ProductModel.js",["123"],"import classes from './ProductModel.module.css';\nimport React from 'react';\n\n\nconst productModel = (props) => {\n    return (\n        <div className={classes.ProductModel}>\n            <p className={classes.itemName}>{props.name}</p>\n            <img src={props.img} height={100} width={100}/>\n            <p>${props.price}</p>\n            <div className={classes.BottomBar} style={props.count > 0 ? {backgroundColor: \"#efa31d\"} : {backgroundColor: \"\"}}>\n                {props.count > 0 ? <button onClick={props.remove} style={{backgroundColor: \"#efa31d\"}}>-</button> : <button disabled={true} className={classes.disabledBtn} onClick={props.remove}>-</button>}\n                { props.count === 0 ? <p>ADD TO CART</p> : <p style={{fontWeight: \"Bold\", fontSize: \"12px\"}}>{props.count} ADDED</p>}\n                {props.count > 0 ? <button className={classes.addBtn} onClick={props.add} style={{backgroundColor: \"#efa31d\"}}>+</button> : <button className={classes.addBtn} onClick={props.add}>+</button>}\n            </div>\n        </div>\n    )\n}\n\nexport default productModel;","/Users/alexforest/Desktop/OnlineStore/src/components/UI/HomeItem/HomeItem.js",["124"],"import React from 'react';\nimport classes from './HomeItem.module.css';\n\nconst homeItem = (props) => {\n    return (\n        <div className={classes.HomeItem}>\n            <h4>{props.type}</h4>\n            <img src={props.img}/>\n            <p>{props.message}</p>\n            <button onClick={props.click}>Browse</button>\n        </div>\n    )\n}\n\nexport default homeItem;","/Users/alexforest/Desktop/OnlineStore/src/components/UI/Order/Order.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/Navbar/Navbar.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/CartItem/CartItem.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/Modal/Modal.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":3,"column":17,"nodeType":"131","messageId":"132","endLine":3,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":73,"column":7,"nodeType":"131","messageId":"132","endLine":73,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":9,"column":5,"nodeType":"136","messageId":"137","endLine":46,"endColumn":6},{"ruleId":"129","severity":1,"message":"138","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":2,"column":27,"nodeType":"131","messageId":"132","endLine":2,"endColumn":36},{"ruleId":"129","severity":1,"message":"139","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"140","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":15},{"ruleId":"129","severity":1,"message":"141","line":12,"column":8,"nodeType":"131","messageId":"132","endLine":12,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":38,"column":25,"nodeType":"144","endLine":38,"endColumn":104},{"ruleId":"129","severity":1,"message":"138","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":2,"column":27,"nodeType":"131","messageId":"132","endLine":2,"endColumn":36},{"ruleId":"129","severity":1,"message":"145","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":12},{"ruleId":"129","severity":1,"message":"146","line":8,"column":16,"nodeType":"131","messageId":"132","endLine":8,"endColumn":29},{"ruleId":"129","severity":1,"message":"141","line":18,"column":8,"nodeType":"131","messageId":"132","endLine":18,"endColumn":17},{"ruleId":"129","severity":1,"message":"138","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"138","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"138","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":9,"column":13,"nodeType":"144","endLine":9,"endColumn":60},{"ruleId":"142","severity":1,"message":"143","line":8,"column":13,"nodeType":"144","endLine":8,"endColumn":35},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'mapStateToProps' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'axios' is defined but never used.","'homeImg' is defined but never used.","'BottomBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Cart' is defined but never used.","'removeHandler' is defined but never used.","no-global-assign","no-unsafe-negation"]