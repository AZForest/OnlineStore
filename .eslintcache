[{"/Users/alexforest/Desktop/OnlineStore/src/index.js":"1","/Users/alexforest/Desktop/OnlineStore/src/reportWebVitals.js":"2","/Users/alexforest/Desktop/OnlineStore/src/App.js":"3","/Users/alexforest/Desktop/OnlineStore/src/store/reducer.js":"4","/Users/alexforest/Desktop/OnlineStore/src/store/actions/actionTypes.js":"5","/Users/alexforest/Desktop/OnlineStore/src/containers/Home/Home.js":"6","/Users/alexforest/Desktop/OnlineStore/src/containers/Auth/Auth.js":"7","/Users/alexforest/Desktop/OnlineStore/src/hoc/Layout/Layout.js":"8","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Fruit/Fruit.js":"9","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Frozen/Frozen.js":"10","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Bakery/Bakery.js":"11","/Users/alexforest/Desktop/OnlineStore/src/containers/User/Cart/Cart.js":"12","/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Vegetables/Vegetables.js":"13","/Users/alexforest/Desktop/OnlineStore/src/containers/User/Account/Account.js":"14","/Users/alexforest/Desktop/OnlineStore/src/components/UI/Input/Input.js":"15","/Users/alexforest/Desktop/OnlineStore/src/components/BottomBar/BottomBar.js":"16","/Users/alexforest/Desktop/OnlineStore/src/components/UI/ProductModel/ProductModel.js":"17","/Users/alexforest/Desktop/OnlineStore/src/components/UI/HomeItem/HomeItem.js":"18","/Users/alexforest/Desktop/OnlineStore/src/components/UI/Order/Order.js":"19","/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/Navbar/Navbar.js":"20","/Users/alexforest/Desktop/OnlineStore/src/components/UI/CartItem/CartItem.js":"21","/Users/alexforest/Desktop/OnlineStore/src/components/UI/Modal/Modal.js":"22","/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"23"},{"size":815,"mtime":1611767986651,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611636164098,"results":"26","hashOfConfig":"25"},{"size":3031,"mtime":1617309503316,"results":"27","hashOfConfig":"25"},{"size":1412,"mtime":1612853972923,"results":"28","hashOfConfig":"25"},{"size":560,"mtime":1612852676368,"results":"29","hashOfConfig":"25"},{"size":3082,"mtime":1617309778164,"results":"30","hashOfConfig":"25"},{"size":6490,"mtime":1617565081127,"results":"31","hashOfConfig":"25"},{"size":479,"mtime":1617309878283,"results":"32","hashOfConfig":"25"},{"size":7181,"mtime":1617567345052,"results":"33","hashOfConfig":"25"},{"size":7051,"mtime":1617572265672,"results":"34","hashOfConfig":"25"},{"size":6945,"mtime":1617572307732,"results":"35","hashOfConfig":"25"},{"size":7732,"mtime":1617572445946,"results":"36","hashOfConfig":"25"},{"size":6821,"mtime":1617572234632,"results":"37","hashOfConfig":"25"},{"size":2193,"mtime":1617572307749,"results":"38","hashOfConfig":"25"},{"size":703,"mtime":1611810905642,"results":"39","hashOfConfig":"25"},{"size":369,"mtime":1613671601005,"results":"40","hashOfConfig":"25"},{"size":1073,"mtime":1613104011696,"results":"41","hashOfConfig":"25"},{"size":369,"mtime":1613241306637,"results":"42","hashOfConfig":"25"},{"size":891,"mtime":1614015049736,"results":"43","hashOfConfig":"25"},{"size":2475,"mtime":1617309694450,"results":"44","hashOfConfig":"25"},{"size":560,"mtime":1613238211162,"results":"45","hashOfConfig":"25"},{"size":620,"mtime":1613517300461,"results":"46","hashOfConfig":"25"},{"size":391,"mtime":1611861053679,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1blmw8g",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexforest/Desktop/OnlineStore/src/index.js",[],"/Users/alexforest/Desktop/OnlineStore/src/reportWebVitals.js",[],"/Users/alexforest/Desktop/OnlineStore/src/App.js",["96","97"],"/Users/alexforest/Desktop/OnlineStore/src/store/reducer.js",["98"],"/Users/alexforest/Desktop/OnlineStore/src/store/actions/actionTypes.js",[],"/Users/alexforest/Desktop/OnlineStore/src/containers/Home/Home.js",["99","100","101","102","103","104"],"/Users/alexforest/Desktop/OnlineStore/src/containers/Auth/Auth.js",[],"/Users/alexforest/Desktop/OnlineStore/src/hoc/Layout/Layout.js",[],"/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Fruit/Fruit.js",["105","106","107","108","109"],"/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Frozen/Frozen.js",["110"],"/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Bakery/Bakery.js",["111"],"import classes from '../Fruit/Fruit.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n//Images\nimport baguette from '../../../assets/Bakery/Baguette.jpg';\nimport blueberryMuffins from '../../../assets/Bakery/BlueberryMuffins.jpg';\nimport chocolateChipCookies from '../../../assets/Bakery/ChocolateChipCookies.jpg';\nimport ciabattaRolls from '../../../assets/Bakery/CiabattaRolls.jpg';\nimport frenchBread from '../../../assets/Bakery/FrenchBread.jpg';\nimport garlicBread from '../../../assets/Bakery/GarlicBread.jpg';\nimport pumpkinPie from '../../../assets/Bakery/PumpkinPie.jpg';\nimport traditionalBagels from '../../../assets/Bakery/TraditionalBagels.jpg';\n\nclass Bakery extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n        let bakery = [];\n        let products = JSON.parse(localStorage.getItem('products'));\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].type === \"Bakery\") {\n                bakery.push(products[i]);\n            }\n        }\n        this.setState({products: bakery})\n    }\n\n    addHandler(name, price) {\n        if (this.props.user === null) {\n            //this.props.history.push('/auth');\n            window.alert('Please log in or sign up to add items to cart.');\n        } else {\n            let data = {\n                prevCart: this.props.user.cart,\n                product: {\n                    name: name,\n                    price: price,\n                    count: 1\n                },\n                updateCount: false\n            }\n            \n            for (let i = 0; i < data.prevCart.length; i++) {\n                if (data.prevCart[i].name === data.product.name) {\n                    data.updateCount = true;\n                }\n            }\n\n            let updatedAcc;\n            if (!data.updateCount) {\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: this.props.user.cart.concat(data.product)\n                }\n            } else {\n                let element;\n                for (let i = 0; i < this.props.user.cart.length; i++) {\n                    if (this.props.user.cart[i].name === data.product.name) {\n                        element = i;\n                    }\n                }\n                let newAcc = this.props.user.cart;\n                newAcc[element].count += 1;\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: newAcc\n                }\n            }\n            \n\n            axios.patch(`http://onlinestoreserver.herokuapp.com/users/${this.props.user.id}/addProduct`, data)\n            .then(response => {\n                console.log(response);\n                this.props.onUpdateCart(updatedAcc);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://onlinestoreserver.herokuapp.com/users/${this.props.user.id}/removeProduct`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Baguette\", img: baguette },\n            { name: \"Blueberry Muffins\", img: blueberryMuffins },\n            { name: \"Chocolate Chip Cookies\", img: chocolateChipCookies },\n            { name: \"Ciabatta Rolls\", img: ciabattaRolls },\n            { name: \"French Bread\", img: frenchBread },\n            { name: \"Garlic Bread\", img: garlicBread },\n            { name: \"Pumpkin Pie\", img: pumpkinPie },\n            { name: \"Traditional Bagels\", img: traditionalBagels }\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    countHandler(item) {\n        if (this.props.user !== null) {\n            let userCart = this.props.user.cart;\n            let result = -1;\n            for (let i = 0; i < userCart.length; i++) {\n                if (userCart[i].name === item) {\n                    result = userCart[i].count;\n                }\n            }\n            if (result === -1) {\n                return 0;\n            } else {\n                return result;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    render() {\n        let bakeryItems = this.state.products;\n        /* for (let i = 0; i < this.props.productsArr.length; i++) {\n            if (this.props.productsArr[i].type === \"Bakery\") {\n                bakeryItems.push(this.props.productsArr[i]);\n            }\n        } */\n\n        return (\n            <div className={classes.Fruit}>\n                <h3>Fresh Bread and Deserts</h3>\n                <div className={classes.FruitContainer}>\n                    {bakeryItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.addHandler(item.name, item.price)}\n                        remove={() => this.removeHandler(item.name, item.price)}\n                        count={this.countHandler(item.name)}\n                        img={this.imageHandler(item.name)}\n                        />;\n                    })}\n                </div>\n            </div>\n        )\n            \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bakery);",["112","113"],"/Users/alexforest/Desktop/OnlineStore/src/containers/User/Cart/Cart.js",[],"/Users/alexforest/Desktop/OnlineStore/src/containers/Products/Vegetables/Vegetables.js",["114"],"/Users/alexforest/Desktop/OnlineStore/src/containers/User/Account/Account.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/Input/Input.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/BottomBar/BottomBar.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/ProductModel/ProductModel.js",["115"],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/HomeItem/HomeItem.js",["116"],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/Order/Order.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/Navbar/Navbar.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/CartItem/CartItem.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/UI/Modal/Modal.js",[],"/Users/alexforest/Desktop/OnlineStore/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],{"ruleId":"117","severity":1,"message":"118","line":3,"column":17,"nodeType":"119","messageId":"120","endLine":3,"endColumn":26},{"ruleId":"117","severity":1,"message":"121","line":73,"column":7,"nodeType":"119","messageId":"120","endLine":73,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":9,"column":5,"nodeType":"124","messageId":"125","endLine":46,"endColumn":6},{"ruleId":"117","severity":1,"message":"126","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":2,"column":27,"nodeType":"119","messageId":"120","endLine":2,"endColumn":36},{"ruleId":"117","severity":1,"message":"127","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":13},{"ruleId":"117","severity":1,"message":"128","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"117","severity":1,"message":"129","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":38,"column":25,"nodeType":"132","endLine":38,"endColumn":104},{"ruleId":"117","severity":1,"message":"126","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":2,"column":27,"nodeType":"119","messageId":"120","endLine":2,"endColumn":36},{"ruleId":"117","severity":1,"message":"133","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":12},{"ruleId":"117","severity":1,"message":"134","line":8,"column":16,"nodeType":"119","messageId":"120","endLine":8,"endColumn":29},{"ruleId":"117","severity":1,"message":"129","line":18,"column":8,"nodeType":"119","messageId":"120","endLine":18,"endColumn":17},{"ruleId":"117","severity":1,"message":"126","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":25},{"ruleId":"117","severity":1,"message":"126","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":25},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"117","severity":1,"message":"126","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":9,"column":13,"nodeType":"132","endLine":9,"endColumn":60},{"ruleId":"130","severity":1,"message":"131","line":8,"column":13,"nodeType":"132","endLine":8,"endColumn":35},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'mapStateToProps' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'axios' is defined but never used.","'homeImg' is defined but never used.","'BottomBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Cart' is defined but never used.","'removeHandler' is defined but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-global-assign","no-unsafe-negation"]