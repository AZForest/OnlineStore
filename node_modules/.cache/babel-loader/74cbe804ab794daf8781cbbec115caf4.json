{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Bakery/Bakery.js\";\nimport classes from './Bakery.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; //Images\n\nimport baguette from '../../../assets/Bakery/Baguette.jpg';\nimport blueberryMuffins from '../../../assets/Bakery/BlueberryMuffins.jpg';\nimport chocolateChipCookies from '../../../assets/Bakery/ChocolateChipCookies.jpg';\nimport ciabattaRolls from '../../../assets/Bakery/CiabattaRolls.jpg';\nimport frenchBread from '../../../assets/Bakery/FrenchBread.jpg';\nimport garlicBread from '../../../assets/Bakery/GarlicBread.jpg';\nimport pumpkinPie from '../../../assets/Bakery/PumpkinPie.jpg';\nimport traditionalBagels from '../../../assets/Bakery/traditionalBagels.jpg';\n\nclass Bakery extends React.Component {\n  addHandler(name, price) {\n    let data = {\n      prevCart: this.props.user.cart,\n      product: {\n        name: name,\n        price: price,\n        count: 1\n      },\n      updateCount: false\n    };\n\n    for (let i = 0; i < data.prevCart.length; i++) {\n      if (data.prevCart[i].name === data.product.name) {\n        data.updateCount = true;\n      }\n    }\n\n    let updatedAcc;\n\n    if (!data.updateCount) {\n      updatedAcc = { ...this.props.user,\n        cart: this.props.user.cart.concat(data.product)\n      };\n    } else {\n      let element;\n\n      for (let i = 0; i < this.props.user.cart.length; i++) {\n        if (this.props.user.cart[i].name === data.product.name) {\n          element = i;\n        }\n      }\n\n      let newAcc = this.props.user.cart;\n      newAcc[element].count += 1;\n      updatedAcc = { ...this.props.user,\n        cart: newAcc\n      };\n    }\n\n    axios.patch(`http://localhost:3005/users/${this.props.user.id}/add`, data).then(response => {\n      console.log(response);\n      this.props.onUpdateCart(updatedAcc);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  removeHandler(name, price) {\n    let data = {\n      prevCart: this.props.user.cart,\n      product: {\n        name: name,\n        price: price,\n        count: 1\n      },\n      updateCount: false\n    };\n    let cartArray = this.props.user.cart;\n    let index2 = -1;\n\n    for (let i = 0; i < cartArray.length; i++) {\n      if (cartArray[i].name === data.product.name) {\n        index2 = i;\n\n        if (cartArray[i].count > 1) {\n          data.updateCount = true;\n        }\n      }\n    }\n\n    if (!data.updateCount) {\n      if (index2 >= 0) {\n        cartArray.splice(index2, 1);\n      }\n    } else {\n      cartArray[index2].count -= 1;\n    }\n\n    let updatedAcc = { ...this.props.user,\n      cart: cartArray\n    }; //PATCH remove\n\n    axios.patch(`http://localhost:3005/users/${this.props.user.id}/remove`, data).then(response => {\n      console.log(response);\n      this.props.onUpdateCart(updatedAcc);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  imageHandler(item) {\n    let imgLibrary = [{\n      name: \"Baguette\",\n      img: baguette\n    }, {\n      name: \"Blueberry Muffins\",\n      img: blueberryMuffins\n    }, {\n      name: \"Chocolate Chip Cookies\",\n      img: chocolateChipCookies\n    }, {\n      name: \"Ciabatta Rolls\",\n      img: ciabattaRolls\n    }, {\n      name: \"French Bread\",\n      img: frenchBread\n    }, {\n      name: \"Garlic Bread\",\n      img: garlicBread\n    }, {\n      name: \"Pumpkin Pie\",\n      img: pumpkinPie\n    }, {\n      name: \"Traditional Bagels\",\n      img: traditionalBagels\n    }];\n    let result = imgLibrary.filter(obj => {\n      return obj.name === item;\n    });\n    return result[0].img;\n  }\n\n  countHandler(item) {\n    if (this.props.user !== null) {\n      let userCart = this.props.user.cart;\n      let result = -1;\n\n      for (let i = 0; i < userCart.length; i++) {\n        if (userCart[i].name === item) {\n          result = userCart[i].count;\n        }\n      }\n\n      if (result === -1) {\n        return 0;\n      } else {\n        return result;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  render() {\n    let bakeryItems = [];\n\n    for (let i = 0; i < this.props.productsArr.length; i++) {\n      if (this.props.productsArr[i].type === \"Bakery\") {\n        bakeryItems.push(this.props.productsArr[i]);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Fruit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.FruitContainer,\n        children: bakeryItems.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ProductModel, {\n            name: item.name,\n            type: item.type,\n            price: item.price,\n            add: () => this.addHandler(item.name, item.price),\n            remove: () => this.removeHandler(item.name, item.price),\n            count: this.countHandler(item.name),\n            img: this.imageHandler(item.name)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.activeUser,\n    productsArr: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateCart: account => dispatch({\n      type: actionTypes.UPDATE_CART,\n      account\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bakery);","map":{"version":3,"sources":["/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Bakery/Bakery.js"],"names":["classes","React","useState","connect","baguette","blueberryMuffins","chocolateChipCookies","ciabattaRolls","frenchBread","garlicBread","pumpkinPie","traditionalBagels","Bakery","Component","addHandler","name","price","data","prevCart","props","user","cart","product","count","updateCount","i","length","updatedAcc","concat","element","newAcc","axios","patch","id","then","response","console","log","onUpdateCart","catch","err","removeHandler","cartArray","index2","splice","imageHandler","item","imgLibrary","img","result","filter","obj","countHandler","userCart","render","bakeryItems","productsArr","type","push","Fruit","FruitContainer","map","index","_id","mapStateToProps","state","activeUser","products","mapDispatchToProps","dispatch","account","actionTypes","UPDATE_CART"],"mappings":"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","sourcesContent":["import classes from './Bakery.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n//Images\nimport baguette from '../../../assets/Bakery/Baguette.jpg';\nimport blueberryMuffins from '../../../assets/Bakery/BlueberryMuffins.jpg';\nimport chocolateChipCookies from '../../../assets/Bakery/ChocolateChipCookies.jpg';\nimport ciabattaRolls from '../../../assets/Bakery/CiabattaRolls.jpg';\nimport frenchBread from '../../../assets/Bakery/FrenchBread.jpg';\nimport garlicBread from '../../../assets/Bakery/GarlicBread.jpg';\nimport pumpkinPie from '../../../assets/Bakery/PumpkinPie.jpg';\nimport traditionalBagels from '../../../assets/Bakery/traditionalBagels.jpg';\n\nclass Bakery extends React.Component {\n\n    addHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        \n        for (let i = 0; i < data.prevCart.length; i++) {\n            if (data.prevCart[i].name === data.product.name) {\n                data.updateCount = true;\n            }\n        }\n\n        let updatedAcc;\n        if (!data.updateCount) {\n            updatedAcc = {\n                ...this.props.user,\n                cart: this.props.user.cart.concat(data.product)\n            }\n        } else {\n            let element;\n            for (let i = 0; i < this.props.user.cart.length; i++) {\n                if (this.props.user.cart[i].name === data.product.name) {\n                    element = i;\n                }\n            }\n            let newAcc = this.props.user.cart;\n            newAcc[element].count += 1;\n            updatedAcc = {\n                ...this.props.user,\n                cart: newAcc\n            }\n        }\n        \n\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/add`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/remove`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Baguette\", img: baguette },\n            { name: \"Blueberry Muffins\", img: blueberryMuffins },\n            { name: \"Chocolate Chip Cookies\", img: chocolateChipCookies },\n            { name: \"Ciabatta Rolls\", img: ciabattaRolls },\n            { name: \"French Bread\", img: frenchBread },\n            { name: \"Garlic Bread\", img: garlicBread },\n            { name: \"Pumpkin Pie\", img: pumpkinPie },\n            { name: \"Traditional Bagels\", img: traditionalBagels }\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    countHandler(item) {\n        if (this.props.user !== null) {\n            let userCart = this.props.user.cart;\n            let result = -1;\n            for (let i = 0; i < userCart.length; i++) {\n                if (userCart[i].name === item) {\n                    result = userCart[i].count;\n                }\n            }\n            if (result === -1) {\n                return 0;\n            } else {\n                return result;\n            }\n        } else {\n            return 0;\n        }\n    }\n    render() {\n        let bakeryItems = [];\n        for (let i = 0; i < this.props.productsArr.length; i++) {\n            if (this.props.productsArr[i].type === \"Bakery\") {\n                bakeryItems.push(this.props.productsArr[i]);\n            }\n        }\n\n        return (\n            <div className={classes.Fruit}>\n                <div className={classes.FruitContainer}>\n                    {bakeryItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.addHandler(item.name, item.price)}\n                        remove={() => this.removeHandler(item.name, item.price)}\n                        count={this.countHandler(item.name)}\n                        img={this.imageHandler(item.name)}\n                        />;\n                    })}\n                </div>\n            </div>\n        )\n            \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bakery);"]},"metadata":{},"sourceType":"module"}