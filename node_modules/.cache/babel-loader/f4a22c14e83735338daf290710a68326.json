{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Fruit/Fruit.js\";\nimport classes from './Fruit.module.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes'; //Images\n\nimport banana from '../../../assets/Fruit/Banana.jpg';\n\nclass Fruit extends React.Component {\n  /* useEffect(() => {\n      axios.get('/products')\n      .then\n  }, []) */\n  addHandler(name, price) {\n    let data = {\n      prevCart: this.props.user.cart,\n      product: {\n        name: name,\n        price: price,\n        count: 1\n      },\n      updateCount: false\n    };\n\n    for (let i = 0; i < data.prevCart.length; i++) {\n      if (data.prevCart[i].name === data.product.name) {\n        /*                 data.prevCart[i].count += 1; */\n        data.updateCount = true;\n      }\n    }\n\n    let updatedAcc;\n\n    if (!data.updateCount) {\n      updatedAcc = { ...this.props.user,\n        cart: this.props.user.cart.concat(data.product)\n      };\n    } else {\n      let element;\n\n      for (let i = 0; i < this.props.user.cart.length; i++) {\n        if (this.props.user.cart[i].name === data.product.name) {\n          element = i;\n        }\n      }\n\n      updatedAcc = { ...this.props.user,\n        cart: this.props.user.cart[element].count + 1\n      };\n    }\n\n    axios.patch(`http://localhost:3005/users/${this.props.user.id}/add`, data).then(response => {\n      console.log(response);\n      this.props.onUpdateCart(updatedAcc);\n    }).catch(err => {\n      console.log(err);\n    });\n    /* this.props.onAddProduct(product); */\n  }\n\n  removeHandler(name, price) {\n    let data = {\n      prevCart: this.props.user.cart,\n      product: {\n        name: name,\n        price: price,\n        count: 1\n      },\n      updateCount: false\n    };\n    let cartArray = this.props.user.cart;\n    let index2 = -1;\n\n    for (let i = 0; i < cartArray.length; i++) {\n      if (cartArray[i].name === data.product.name) {\n        index2 = i;\n\n        if (cartArray[i].count > 1) {\n          data.updateCount = true;\n        }\n      }\n    }\n\n    if (!data.updateCount) {\n      if (index2 >= 0) {\n        cartArray.splice(index2, 1);\n      }\n    } else {\n      cartArray[index2].count -= 1;\n    }\n\n    console.log(cartArray);\n    let updatedAcc = { ...this.props.user,\n      cart: cartArray\n    }; //PATCH remove\n\n    axios.patch(`http://localhost:3005/users/${this.props.user.id}/remove`, data).then(response => {\n      console.log(response);\n      this.props.onUpdateCart(updatedAcc);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let fruitItems = [];\n\n    for (let i = 0; i < this.props.productsArr.length; i++) {\n      if (this.props.productsArr[i].type === \"Fruit\") {\n        fruitItems.push(this.props.productsArr[i]);\n      }\n    }\n\n    let imgLibrary = {\n      Banana: banana\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Fruit,\n      children: [\"Hi Im the fruit page\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.FruitContainer,\n        children: fruitItems.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ProductModel, {\n            name: item.name,\n            type: item.type,\n            price: item.price,\n            add: () => this.addHandler(item.name, item.price),\n            remove: () => this.removeHandler(item.name, item.price),\n            img: banana\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.activeUser,\n    productsArr: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateCart: account => dispatch({\n      type: actionTypes.UPDATE_CART,\n      account\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fruit);","map":{"version":3,"sources":["/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Fruit/Fruit.js"],"names":["classes","React","useState","useEffect","axios","connect","ProductModel","actionTypes","banana","Fruit","Component","addHandler","name","price","data","prevCart","props","user","cart","product","count","updateCount","i","length","updatedAcc","concat","element","patch","id","then","response","console","log","onUpdateCart","catch","err","removeHandler","cartArray","index2","splice","render","fruitItems","productsArr","type","push","imgLibrary","Banana","FruitContainer","map","item","index","_id","mapStateToProps","state","activeUser","products","mapDispatchToProps","dispatch","account","UPDATE_CART"],"mappings":"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","sourcesContent":["import classes from './Fruit.module.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n//Images\nimport banana from '../../../assets/Fruit/Banana.jpg';\n\nclass Fruit extends React.Component {\n\n    /* useEffect(() => {\n        axios.get('/products')\n        .then\n    }, []) */\n    addHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        \n        for (let i = 0; i < data.prevCart.length; i++) {\n            if (data.prevCart[i].name === data.product.name) {\n/*                 data.prevCart[i].count += 1; */\n                data.updateCount = true;\n            }\n        }\n\n        let updatedAcc;\n        if (!data.updateCount) {\n            updatedAcc = {\n                ...this.props.user,\n                cart: this.props.user.cart.concat(data.product)\n            }\n        } else {\n            let element;\n            for (let i = 0; i < this.props.user.cart.length; i++) {\n                if (this.props.user.cart[i].name === data.product.name) {\n                    element = i;\n                }\n            }\n            updatedAcc = {\n                ...this.props.user,\n                cart: this.props.user.cart[element].count + 1\n            }\n        }\n        \n\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/add`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n\n        /* this.props.onAddProduct(product); */\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n        console.log(cartArray);\n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/remove`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n\n    \n\n\n    render() {\n        let fruitItems = [];\n        for (let i = 0; i < this.props.productsArr.length; i++) {\n            if (this.props.productsArr[i].type === \"Fruit\") {\n                fruitItems.push(this.props.productsArr[i]);\n            }\n        }\n\n        let imgLibrary = {\n            Banana: banana\n        }\n\n\n        return (\n            <div className={classes.Fruit}>\n                Hi Im the fruit page\n                <div className={classes.FruitContainer}>\n                    {fruitItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.addHandler(item.name, item.price)}\n                        remove={() => this.removeHandler(item.name, item.price)}\n                        img={banana}\n                        />;\n                    })}\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fruit);"]},"metadata":{},"sourceType":"module"}