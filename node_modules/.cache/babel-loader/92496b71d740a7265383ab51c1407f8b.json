{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Fruit/Fruit.js\";\nimport classes from './Fruit.module.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nclass Fruit extends React.Component {\n  /* useEffect(() => {\n      axios.get('/products')\n      .then\n  }, []) */\n  something() {}\n\n  render() {\n    let fruitItems = [];\n\n    for (let i = 0; i < this.props.productsArr.length; i++) {\n      if (this.props.productsArr[i].type === \"Fruit\") {\n        fruitItems.push(this.props.productsArr[i]);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Fruit,\n      children: [\"Hi Im the fruit page\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.FruitContainer,\n        children: fruitItems.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ProductModel, {\n            name: item.name,\n            desc: item.description,\n            type: item.type,\n            price: item.price,\n            add: () => this.props.something()\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    productsArr: state.products\n  };\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    onAddProduct: () => dispatchEvent({\n      type: actionTypes.ADD_PRODUCT\n    })\n  };\n};\n\nexport default connect(mapStateToProps)(Fruit);","map":{"version":3,"sources":["/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Fruit/Fruit.js"],"names":["classes","React","useState","useEffect","axios","connect","ProductModel","actionTypes","Fruit","Component","something","render","fruitItems","i","props","productsArr","length","type","push","FruitContainer","map","item","index","name","description","price","_id","mapStateToProps","state","products","mapDispatchToProps","onAddProduct","dispatchEvent","ADD_PRODUCT"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oCAA7B;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAEhC;AACJ;AACA;AACA;AACIC,EAAAA,SAAS,GAAG,CAEX;;AAGDC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAA3C,EAAmDH,CAAC,EAApD,EAAwD;AACpD,UAAI,KAAKC,KAAL,CAAWC,WAAX,CAAuBF,CAAvB,EAA0BI,IAA1B,KAAmC,OAAvC,EAAgD;AAC5CL,QAAAA,UAAU,CAACM,IAAX,CAAgB,KAAKJ,KAAL,CAAWC,WAAX,CAAuBF,CAAvB,CAAhB;AACH;AACJ;;AAGD,wBACI;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACQ,KAAxB;AAAA,sDAEI;AAAK,QAAA,SAAS,EAAER,OAAO,CAACmB,cAAxB;AAAA,kBACKP,UAAU,CAACQ,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,8BAAO,QAAC,YAAD;AAAc,YAAA,IAAI,EAAED,IAAI,CAACE,IAAzB;AACP,YAAA,IAAI,EAAEF,IAAI,CAACG,WADJ;AAEP,YAAA,IAAI,EAAEH,IAAI,CAACJ,IAFJ;AAGP,YAAA,KAAK,EAAEI,IAAI,CAACI,KAHL;AAKP,YAAA,GAAG,EAAE,MAAM,KAAKX,KAAL,CAAWJ,SAAX;AALJ,aAIFW,IAAI,CAACK,GAJH;AAAA;AAAA;AAAA;AAAA,kBAAP;AAMH,SAPA;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAnC+B;;AAuCpC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHb,IAAAA,WAAW,EAAEa,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGF,KAAK,IAAI;AAChC,SAAO;AACHG,IAAAA,YAAY,EAAE,MAAMC,aAAa,CAAC;AAACf,MAAAA,IAAI,EAAEV,WAAW,CAAC0B;AAAnB,KAAD;AAD9B,GAAP;AAGH,CAJD;;AAMA,eAAe5B,OAAO,CAACsB,eAAD,CAAP,CAAyBnB,KAAzB,CAAf","sourcesContent":["import classes from './Fruit.module.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nclass Fruit extends React.Component {\n\n    /* useEffect(() => {\n        axios.get('/products')\n        .then\n    }, []) */\n    something() {\n\n    }\n\n\n    render() {\n        let fruitItems = [];\n        for (let i = 0; i < this.props.productsArr.length; i++) {\n            if (this.props.productsArr[i].type === \"Fruit\") {\n                fruitItems.push(this.props.productsArr[i]);\n            }\n        }\n\n\n        return (\n            <div className={classes.Fruit}>\n                Hi Im the fruit page\n                <div className={classes.FruitContainer}>\n                    {fruitItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        desc={item.description}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.props.something()}/>;\n                    })}\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = state => {\n    return {\n        onAddProduct: () => dispatchEvent({type: actionTypes.ADD_PRODUCT})\n    }\n}\n\nexport default connect(mapStateToProps)(Fruit);"]},"metadata":{},"sourceType":"module"}