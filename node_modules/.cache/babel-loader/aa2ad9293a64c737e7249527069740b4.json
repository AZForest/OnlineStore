{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/alexforest/Desktop/OnlineStore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alexforest/Desktop/OnlineStore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/alexforest/Desktop/OnlineStore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/alexforest/Desktop/OnlineStore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import'./App.css';import React,{useEffect}from'react';import axios from'axios';import Layout from'./hoc/Layout/Layout';import{Route,Switch}from'react-router-dom';import Fruit from'./containers/Products/Fruit/Fruit';import Frozen from'./containers/Products/Frozen/Frozen';import Vegetables from'./containers/Products/Vegetables/Vegetables';import Bakery from'./containers/Products/Bakery/Bakery';import Home from'./containers/Home/Home';import Auth from'./containers/Auth/Auth';import Cart from'./containers/User/Cart/Cart';import Account from'./containers/User/Account/Account';import*as actionTypes from'./store/actions/actionTypes';import{connect}from'react-redux';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"componentDidMount\",/* useEffect(() => {\n      axios.get('http://localhost:3005/products')\n      .then(response => {\n          console.log(response);\n          props.onInitProducts(response);\n      })\n      .catch(err => console.log(err))\n  }, []) */value:function componentDidMount(){var _this=this;axios.get('https://onlinestoreserver.herokuapp.com/products').then(function(response){console.log(response.data);_this.props.onInitProducts(response.data);localStorage.setItem('products',JSON.stringify(response.data));}).catch(function(err){return console.log(err);});if(localStorage.getItem('user')!==null){axios.get('https://onlinestoreserver.herokuapp.com/users').then(function(response){for(var i=0;i<response.data.length;i++){//console.log(localStorage.getItem('user'));\nif(response.data[i].userName===localStorage.getItem('user')){_this.props.onAuth(response.data[i].userName,response.data[i].password,response.data[i].orders,response.data[i].cart,response.data[i]._id);}}});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore\",exact:true,component:Home}),/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore/Fruit\",component:Fruit}),/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore/Frozen\",component:Frozen}),/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore/Vegetables\",component:Vegetables}),/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore/Bakery\",component:Bakery}),/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore/Auth\",component:Auth}),/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore/Cart\",component:Cart}),/*#__PURE__*/_jsx(Route,{path:\"/OnlineStore/Account\",component:Account})]})})});}}]);return App;}(React.Component);var mapStateToProps=function mapStateToProps(dispatch){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onInitProducts:function onInitProducts(productsArr){return dispatch({type:actionTypes.INIT_PRODUCTS,productsArr:productsArr});},onAuth:function onAuth(name,password,orders,cart,id){return dispatch({type:actionTypes.ACTIVATE_USER,userData:{userName:name,password:password,orders:orders,cart:cart,id:id}});}};};export default connect(null,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/alexforest/Desktop/OnlineStore/src/App.js"],"names":["React","useEffect","axios","Layout","Route","Switch","Fruit","Frozen","Vegetables","Bakery","Home","Auth","Cart","Account","actionTypes","connect","App","get","then","response","console","log","data","props","onInitProducts","localStorage","setItem","JSON","stringify","catch","err","getItem","i","length","userName","onAuth","password","orders","cart","_id","Component","mapStateToProps","dispatch","mapDispatchToProps","productsArr","type","INIT_PRODUCTS","name","id","ACTIVATE_USER","userData"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Layout from './hoc/Layout/Layout';\nimport { Route, Switch } from 'react-router-dom';\nimport Fruit from './containers/Products/Fruit/Fruit';\nimport Frozen from './containers/Products/Frozen/Frozen';\nimport Vegetables from './containers/Products/Vegetables/Vegetables';\nimport Bakery from './containers/Products/Bakery/Bakery';\nimport Home from './containers/Home/Home';\nimport Auth from './containers/Auth/Auth';\nimport Cart from './containers/User/Cart/Cart';\nimport Account from './containers/User/Account/Account';\nimport * as actionTypes from './store/actions/actionTypes';\nimport { connect } from 'react-redux';\n\n\nclass App extends React.Component {\n\n  /* useEffect(() => {\n      axios.get('http://localhost:3005/products')\n      .then(response => {\n          console.log(response);\n          props.onInitProducts(response);\n      })\n      .catch(err => console.log(err))\n  }, []) */\n  componentDidMount() {\n    axios.get('https://onlinestoreserver.herokuapp.com/products')\n      .then(response => {\n          console.log(response.data);\n          this.props.onInitProducts(response.data);\n          localStorage.setItem('products', JSON.stringify(response.data));\n      })\n      .catch(err => console.log(err))\n\n      if (localStorage.getItem('user') !== null) {\n          axios.get('https://onlinestoreserver.herokuapp.com/users')\n          .then(response => {\n            for (let i = 0; i < response.data.length; i++) {\n              //console.log(localStorage.getItem('user'));\n              if (response.data[i].userName === localStorage.getItem('user')) {\n                this.props.onAuth(response.data[i].userName, response.data[i].password, response.data[i].orders, response.data[i].cart, response.data[i]._id);\n              }\n            }\n          })\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Switch>\n            <Route path=\"/OnlineStore\" exact component={Home}/>\n            <Route path=\"/OnlineStore/Fruit\" component={Fruit}/>\n            <Route path=\"/OnlineStore/Frozen\" component={Frozen}/>\n            <Route path=\"/OnlineStore/Vegetables\" component={Vegetables}/>\n            <Route path=\"/OnlineStore/Bakery\" component={Bakery}/>\n            <Route path=\"/OnlineStore/Auth\" component={Auth}/>\n            <Route path=\"/OnlineStore/Cart\" component={Cart}/>\n            <Route path=\"/OnlineStore/Account\" component={Account}/>\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n\n  \n}\n\nconst mapStateToProps = dispatch => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onInitProducts: (productsArr) => dispatch({type: actionTypes.INIT_PRODUCTS, productsArr}),\n      onAuth: (name, password, orders, cart, id) => dispatch({type: actionTypes.ACTIVATE_USER, userData: { userName: name, password: password, orders: orders, cart: cart, id: id } })\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}