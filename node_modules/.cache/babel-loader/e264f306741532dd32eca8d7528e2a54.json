{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Vegetables/Vegetables.js\";\nimport classes from '../Fruit/Fruit.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes'; //Images\n\nimport broccoli from '../../../assets/Vegetables/Broccoli.jpg';\nimport celery from '../../../assets/Vegetables/Celery.jpg';\nimport cucumber from '../../../assets/Vegetables/Cucumber.jpg';\nimport greenPepper from '../../../assets/Vegetables/GreenBellPepper.jpg';\nimport redPepper from '../../../assets/Vegetables/RedBellPepper.jpg';\nimport romaTomato from '../../../assets/Vegetables/RomaTomato.jpg';\nimport yellowOnion from '../../../assets/Vegetables/YellowOnion.jpg';\nimport zucchini from '../../../assets/Vegetables/Zucchini.jpg';\n\nclass Vegetables extends React.Component {\n  addHandler(name, price) {\n    let data = {\n      prevCart: this.props.user.cart,\n      product: {\n        name: name,\n        price: price,\n        count: 1\n      },\n      updateCount: false\n    };\n\n    for (let i = 0; i < data.prevCart.length; i++) {\n      if (data.prevCart[i].name === data.product.name) {\n        data.updateCount = true;\n      }\n    }\n\n    let updatedAcc;\n\n    if (!data.updateCount) {\n      updatedAcc = { ...this.props.user,\n        cart: this.props.user.cart.concat(data.product)\n      };\n    } else {\n      let element;\n\n      for (let i = 0; i < this.props.user.cart.length; i++) {\n        if (this.props.user.cart[i].name === data.product.name) {\n          element = i;\n        }\n      }\n\n      let newAcc = this.props.user.cart;\n      newAcc[element].count += 1;\n      updatedAcc = { ...this.props.user,\n        cart: newAcc\n      };\n    }\n\n    axios.patch(`http://localhost:3005/users/${this.props.user.id}/add`, data).then(response => {\n      console.log(response);\n      this.props.onUpdateCart(updatedAcc);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  removeHandler(name, price) {\n    let data = {\n      prevCart: this.props.user.cart,\n      product: {\n        name: name,\n        price: price,\n        count: 1\n      },\n      updateCount: false\n    };\n    let cartArray = this.props.user.cart;\n    let index2 = -1;\n\n    for (let i = 0; i < cartArray.length; i++) {\n      if (cartArray[i].name === data.product.name) {\n        index2 = i;\n\n        if (cartArray[i].count > 1) {\n          data.updateCount = true;\n        }\n      }\n    }\n\n    if (!data.updateCount) {\n      if (index2 >= 0) {\n        cartArray.splice(index2, 1);\n      }\n    } else {\n      cartArray[index2].count -= 1;\n    }\n\n    let updatedAcc = { ...this.props.user,\n      cart: cartArray\n    }; //PATCH remove\n\n    axios.patch(`http://localhost:3005/users/${this.props.user.id}/remove`, data).then(response => {\n      console.log(response);\n      this.props.onUpdateCart(updatedAcc);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  imageHandler(item) {\n    let imgLibrary = [{\n      name: \"Broccoli\",\n      img: broccoli\n    }, {\n      name: \"Celery\",\n      img: celery\n    }, {\n      name: \"Cucumber\",\n      img: cucumber\n    }, {\n      name: \"Green Bell Pepper\",\n      img: greenPepper\n    }, {\n      name: \"Red Bell Pepper\",\n      img: redPepper\n    }, {\n      name: \"Roma Tomato\",\n      img: romaTomato\n    }, {\n      name: \"Yellow Onion\",\n      img: yellowOnion\n    }, {\n      name: \"Zucchini\",\n      img: zucchini\n    }];\n    let result = imgLibrary.filter(obj => {\n      return obj.name === item;\n    });\n    return result[0].img;\n  }\n\n  render() {\n    let vegetableItems = [];\n\n    for (let i = 0; i < this.props.productsArr.length; i++) {\n      if (this.props.productsArr[i].type === \"Vegetable\") {\n        vegetableItems.push(this.props.productsArr[i]);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Fruit,\n      children: [\"Hi Im the Vegetables page\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.FruitContainer,\n        children: vegetableItems.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ProductModel, {\n            name: item.name,\n            type: item.type,\n            price: item.price,\n            add: () => this.addHandler(item.name, item.price),\n            remove: () => this.removeHandler(item.name, item.price),\n            img: this.imageHandler(item.name)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.activeUser,\n    productsArr: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateCart: account => dispatch({\n      type: actionTypes.UPDATE_CART,\n      account\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vegetables);","map":{"version":3,"sources":["/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Products/Vegetables/Vegetables.js"],"names":["classes","React","useState","connect","axios","ProductModel","actionTypes","broccoli","celery","cucumber","greenPepper","redPepper","romaTomato","yellowOnion","zucchini","Vegetables","Component","addHandler","name","price","data","prevCart","props","user","cart","product","count","updateCount","i","length","updatedAcc","concat","element","newAcc","patch","id","then","response","console","log","onUpdateCart","catch","err","removeHandler","cartArray","index2","splice","imageHandler","item","imgLibrary","img","result","filter","obj","render","vegetableItems","productsArr","type","push","Fruit","FruitContainer","map","index","_id","mapStateToProps","state","activeUser","products","mapDispatchToProps","dispatch","account","UPDATE_CART"],"mappings":"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","sourcesContent":["import classes from '../Fruit/Fruit.module.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n//Images\nimport broccoli from '../../../assets/Vegetables/Broccoli.jpg';\nimport celery from '../../../assets/Vegetables/Celery.jpg';\nimport cucumber from '../../../assets/Vegetables/Cucumber.jpg';\nimport greenPepper from '../../../assets/Vegetables/GreenBellPepper.jpg';\nimport redPepper from '../../../assets/Vegetables/RedBellPepper.jpg';\nimport romaTomato from '../../../assets/Vegetables/RomaTomato.jpg';\nimport yellowOnion from '../../../assets/Vegetables/YellowOnion.jpg';\nimport zucchini from '../../../assets/Vegetables/Zucchini.jpg';\n\nclass Vegetables extends React.Component {\n\n    addHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        \n        for (let i = 0; i < data.prevCart.length; i++) {\n            if (data.prevCart[i].name === data.product.name) {\n                data.updateCount = true;\n            }\n        }\n\n        let updatedAcc;\n        if (!data.updateCount) {\n            updatedAcc = {\n                ...this.props.user,\n                cart: this.props.user.cart.concat(data.product)\n            }\n        } else {\n            let element;\n            for (let i = 0; i < this.props.user.cart.length; i++) {\n                if (this.props.user.cart[i].name === data.product.name) {\n                    element = i;\n                }\n            }\n            let newAcc = this.props.user.cart;\n            newAcc[element].count += 1;\n            updatedAcc = {\n                ...this.props.user,\n                cart: newAcc\n            }\n        }\n        \n\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/add`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`http://localhost:3005/users/${this.props.user.id}/remove`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Broccoli\", img: broccoli },\n            { name: \"Celery\", img: celery },\n            { name: \"Cucumber\", img: cucumber },\n            { name: \"Green Bell Pepper\", img: greenPepper },\n            { name: \"Red Bell Pepper\", img: redPepper },\n            { name: \"Roma Tomato\", img: romaTomato },\n            { name: \"Yellow Onion\", img: yellowOnion },\n            { name: \"Zucchini\", img: zucchini }\n\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    render() {\n        let vegetableItems = [];\n        for (let i = 0; i < this.props.productsArr.length; i++) {\n            if (this.props.productsArr[i].type === \"Vegetable\") {\n                vegetableItems.push(this.props.productsArr[i]);\n            }\n        }\n\n        return (\n            \n            <div className={classes.Fruit}>\n                Hi Im the Vegetables page\n                <div className={classes.FruitContainer}>\n                    {vegetableItems.map((item, index) => {\n                        return <ProductModel name={item.name}\n                        type={item.type}\n                        price={item.price}\n                        key={item._id}\n                        add={() => this.addHandler(item.name, item.price)}\n                        remove={() => this.removeHandler(item.name, item.price)}\n                        img={this.imageHandler(item.name)}\n                        />;\n                    })}\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vegetables);"]},"metadata":{},"sourceType":"module"}