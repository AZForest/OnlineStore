{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Auth/Auth.js\";\nimport React from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport classes from './Auth.module.css';\nimport { connect } from 'react-redux';\n/* import * as actions from '../../store/actions/index'; */\n\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport axios from 'axios';\n\nclass Auth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        userName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isSignUp: false\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n          touched: true\n        }\n      };\n      this.setState({\n        controls: updatedControls\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      console.log(\"working\");\n      const userData = {\n        \"userName\": `${this.state.controls.userName.value}`,\n        \"password\": `${this.state.controls.password.value}`\n      };\n\n      if (this.state.isSignUp) {\n        axios.post('http://localhost:3005/users/add', userData).then(response => {\n          console.log(response);\n          this.props.onAuth(this.state.controls.userName.value, this.state.controls.password.value);\n          localStorage.setItem('user', this.state.controls.userName.value);\n          this.props.history.push('/');\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        axios.get('http://localhost:3005/users').then(response => {\n          let valid = false;\n          let iterator;\n\n          for (let i = 0; i < response.data.length; i++) {\n            /*                     console.log(response.data[i].userName, this.state.controls.userName.value);\n                                console.log(response.data[i].password, this.state.controls.password.value); */\n            if (response.data[i].userName === this.state.controls.userName.value) {\n              if (response.data[i].password === this.state.controls.password.value) {\n                valid = true;\n                iterator = i;\n              }\n            }\n          }\n\n          console.log(valid);\n\n          if (valid) {\n            this.props.onAuth(this.state.controls.userName.value, this.state.controls.password.value, response.data[iterator].orders, response.data[iterator].cart, response.data[iterator]._id);\n            localStorage.setItem('user', this.state.controls.userName.value);\n            this.props.history.push('/');\n          } //dispatch\n\n        }).catch(err => console.log(err));\n      }\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  switchAuthMode() {\n    this.setState({\n      isSignUp: !this.state.isSignUp\n    });\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    const form = formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id)\n    }, formElement.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Auth,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitHandler,\n        children: [!this.state.isSignUp ? \"Log In\" : \"Sign Up\", form, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.switchAuthMode(),\n        children: !this.state.isSignUp ? \"Switch to Sign Up\" : \"Switch to Log On\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (name, password, orders, cart, id) => dispatch({\n      type: actionTypes.ACTIVATE_USER,\n      userData: {\n        userName: name,\n        password: password,\n        orders: orders,\n        cart: cart,\n        id: id\n      }\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/alexforest/Desktop/OnlineStoreArch/online-store/src/containers/Auth/Auth.js"],"names":["React","Input","classes","connect","actionTypes","axios","Auth","Component","state","controls","userName","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","target","checkValidity","setState","submitHandler","preventDefault","console","log","userData","post","then","response","props","onAuth","localStorage","setItem","history","push","catch","err","get","iterator","i","data","length","orders","cart","_id","rules","isValid","trim","maxLength","isEmail","pattern","test","isNumeric","switchAuthMode","render","formElementsArray","key","id","config","form","map","formElement","mapDispatchToProps","dispatch","name","ACTIVATE_USER"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport classes from './Auth.module.css';\nimport { connect } from 'react-redux';\n/* import * as actions from '../../store/actions/index'; */\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport axios from 'axios';\n\n\nclass Auth extends React.Component {\n    state = {\n        controls: {\n            userName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignUp: false\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({controls: updatedControls});\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        console.log(\"working\");\n        const userData = {\n            \"userName\": `${this.state.controls.userName.value}`,\n            \"password\": `${this.state.controls.password.value\n            }`\n        }\n        if (this.state.isSignUp) {\n            axios.post('http://localhost:3005/users/add', userData)\n            .then(response => {\n                console.log(response);\n                this.props.onAuth(this.state.controls.userName.value, this.state.controls.password.value);\n                localStorage.setItem('user', this.state.controls.userName.value);\n                this.props.history.push('/');\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        } else {\n            axios.get('http://localhost:3005/users')\n            .then(response => {\n                let valid = false;\n                let iterator;\n\n                for (let i = 0; i < response.data.length; i++) {\n/*                     console.log(response.data[i].userName, this.state.controls.userName.value);\n                    console.log(response.data[i].password, this.state.controls.password.value); */\n                    if (response.data[i].userName === this.state.controls.userName.value) {\n                        if (response.data[i].password === this.state.controls.password.value) {\n                            valid = true;\n                            iterator = i;\n                        }\n                    }\n                }\n                console.log(valid);\n                if (valid) {\n                    this.props.onAuth(this.state.controls.userName.value, this.state.controls.password.value, response.data[iterator].orders, response.data[iterator].cart, response.data[iterator]._id);\n                    localStorage.setItem('user', this.state.controls.userName.value);\n                    this.props.history.push('/')\n                }\n                //dispatch\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    switchAuthMode() {\n        this.setState({isSignUp: !this.state.isSignUp})\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        const form = formElementsArray.map(formElement => (\n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )}/>\n        ))\n\n        return (\n            <div className={classes.Auth}>\n                <form onSubmit={this.submitHandler}>\n                    {!this.state.isSignUp ? \"Log In\" : \"Sign Up\"}\n                    {form}\n                    <button>SUBMIT</button>\n                    <hr />\n                </form>\n                <button onClick={() => this.switchAuthMode()}>{!this.state.isSignUp ? \"Switch to Sign Up\" : \"Switch to Log On\"}</button>\n            </div>\n\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (name, password, orders, cart, id) => dispatch({type: actionTypes.ACTIVATE_USER, userData: { userName: name, password: password, orders: orders, cart: cart, id: id } })\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}