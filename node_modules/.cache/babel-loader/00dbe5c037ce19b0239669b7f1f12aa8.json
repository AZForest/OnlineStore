{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/GitHubProjects/OnlineStore/src/containers/Products/Fruit/Fruit.js\";\nimport classes from './Fruit.module.css';\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes'; //Images\n\nimport banana from '../../../assets/Fruit/Banana.jpg';\nimport organicBanana from '../../../assets/Fruit/OrganicBanana.jpg';\nimport blackberries from '../../../assets/Fruit/Blackberries.jpg';\nimport blueberries from '../../../assets/Fruit/Blueberries.jpg';\nimport pineapple from '../../../assets/Fruit/FreshPineapple.jpg';\nimport raspberries from '../../../assets/Fruit/Raspberries.jpg';\nimport redGrapes from '../../../assets/Fruit/RedSeedlessGrapes.jpg';\nimport strawberries from '../../../assets/Fruit/Strawberries.jpg';\n\nclass Fruit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    let fruit = [];\n    let products = JSON.parse(localStorage.getItem('products'));\n    console.log(products);\n\n    for (let i = 0; i < products.length; i++) {\n      if (products[i].type === \"Fruit\") {\n        fruit.push(products[i]);\n      }\n    }\n\n    console.log(fruit);\n    this.setState({\n      products: fruit\n    });\n  }\n\n  addHandler(name, price) {\n    if (this.props.user === null) {\n      window.alert('Please log in or sign up to add items to cart.');\n    } else {\n      let data = {\n        prevCart: this.props.user.cart,\n        product: {\n          name: name,\n          price: price,\n          count: 1\n        },\n        updateCount: false\n      };\n\n      for (let i = 0; i < data.prevCart.length; i++) {\n        if (data.prevCart[i].name === data.product.name) {\n          data.updateCount = true;\n        }\n      }\n\n      let updatedAcc;\n\n      if (!data.updateCount) {\n        updatedAcc = { ...this.props.user,\n          cart: this.props.user.cart.concat(data.product)\n        };\n      } else {\n        let element;\n\n        for (let i = 0; i < this.props.user.cart.length; i++) {\n          if (this.props.user.cart[i].name === data.product.name) {\n            element = i;\n          }\n        }\n\n        let newAcc = this.props.user.cart;\n        newAcc[element].count += 1;\n        updatedAcc = { ...this.props.user,\n          cart: newAcc\n        };\n      }\n\n      axios.patch(`https://onlinestoreserver.herokuapp.com/users/${this.props.user.id}/addProduct`, data).then(response => {\n        console.log(response);\n        this.props.onUpdateCart(updatedAcc);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  removeHandler(name, price) {\n    let data = {\n      prevCart: this.props.user.cart,\n      product: {\n        name: name,\n        price: price,\n        count: 1\n      },\n      updateCount: false\n    };\n    let cartArray = this.props.user.cart;\n    let index2 = -1;\n\n    for (let i = 0; i < cartArray.length; i++) {\n      if (cartArray[i].name === data.product.name) {\n        index2 = i;\n\n        if (cartArray[i].count > 1) {\n          data.updateCount = true;\n        }\n      }\n    }\n\n    if (!data.updateCount) {\n      if (index2 >= 0) {\n        cartArray.splice(index2, 1);\n      }\n    } else {\n      cartArray[index2].count -= 1;\n    }\n\n    let updatedAcc = { ...this.props.user,\n      cart: cartArray\n    }; //PATCH remove\n\n    axios.patch(`https://onlinestoreserver.herokuapp.com/users/${this.props.user.id}/removeProduct`, data).then(response => {\n      console.log(response);\n      this.props.onUpdateCart(updatedAcc);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  imageHandler(item) {\n    let imgLibrary = [{\n      name: \"Banana\",\n      img: banana\n    }, {\n      name: \"Organic Banana\",\n      img: organicBanana\n    }, {\n      name: \"Strawberries\",\n      img: strawberries\n    }, {\n      name: \"Blackberries\",\n      img: blackberries\n    }, {\n      name: \"Fresh Pineapple\",\n      img: pineapple\n    }, {\n      name: \"Red Seedless Grapes\",\n      img: redGrapes\n    }, {\n      name: \"Raspberries\",\n      img: raspberries\n    }, {\n      name: \"Blueberries\",\n      img: blueberries\n    }];\n    let result = imgLibrary.filter(obj => {\n      return obj.name === item;\n    });\n    return result[0].img;\n  }\n\n  countHandler(item) {\n    if (this.props.user !== null) {\n      let userCart = this.props.user.cart;\n      let result = -1;\n\n      for (let i = 0; i < userCart.length; i++) {\n        if (userCart[i].name === item) {\n          result = userCart[i].count;\n        }\n      }\n\n      if (result === -1) {\n        return 0;\n      } else {\n        return result;\n      } //return result[0].count;\n\n    } else {\n      return 0;\n    }\n  }\n\n  render() {\n    let fruitItems = this.state.products;\n    /* for (let i = 0; i < this.state.products.length; i++) {\n        if (this.state.products[i].type === \"Fruit\") {\n            fruitItems.push(this.state.products[i]);\n        }\n    } */\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Fruit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Fresh Fruit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.FruitContainer,\n          children: fruitItems.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(ProductModel, {\n              name: item.name,\n              type: item.type,\n              price: item.price,\n              add: () => this.addHandler(item.name, item.price),\n              remove: () => this.removeHandler(item.name, item.price),\n              count: this.countHandler(item.name),\n              img: this.imageHandler(item.name)\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.activeUser,\n    productsArr: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateCart: account => dispatch({\n      type: actionTypes.UPDATE_CART,\n      account\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fruit);","map":{"version":3,"sources":["/Users/alexforest/Desktop/GitHubProjects/OnlineStore/src/containers/Products/Fruit/Fruit.js"],"names":["classes","React","axios","connect","ProductModel","actionTypes","banana","organicBanana","blackberries","blueberries","pineapple","raspberries","redGrapes","strawberries","Fruit","Component","state","products","componentDidMount","fruit","JSON","parse","localStorage","getItem","console","log","i","length","type","push","setState","addHandler","name","price","props","user","window","alert","data","prevCart","cart","product","count","updateCount","updatedAcc","concat","element","newAcc","patch","id","then","response","onUpdateCart","catch","err","removeHandler","cartArray","index2","splice","imageHandler","item","imgLibrary","img","result","filter","obj","countHandler","userCart","render","fruitItems","FruitContainer","map","index","_id","mapStateToProps","activeUser","productsArr","mapDispatchToProps","dispatch","account","UPDATE_CART"],"mappings":"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","sourcesContent":["import classes from './Fruit.module.css';\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport ProductModel from '../../../components/UI/ProductModel/ProductModel';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\n//Images\nimport banana from '../../../assets/Fruit/Banana.jpg';\nimport organicBanana from '../../../assets/Fruit/OrganicBanana.jpg';\nimport blackberries from '../../../assets/Fruit/Blackberries.jpg';\nimport blueberries from '../../../assets/Fruit/Blueberries.jpg';\nimport pineapple from '../../../assets/Fruit/FreshPineapple.jpg';\nimport raspberries from '../../../assets/Fruit/Raspberries.jpg';\nimport redGrapes from '../../../assets/Fruit/RedSeedlessGrapes.jpg';\nimport strawberries from '../../../assets/Fruit/Strawberries.jpg';\n\nclass Fruit extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n        let fruit = [];\n        let products = JSON.parse(localStorage.getItem('products'));\n        console.log(products);\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].type === \"Fruit\") {\n                fruit.push(products[i]);\n            }\n        }\n        console.log(fruit);\n        this.setState({products: fruit})\n    }\n\n\n    addHandler(name, price) {\n        if (this.props.user === null) {\n            window.alert('Please log in or sign up to add items to cart.');\n        } else {\n            let data = {\n                prevCart: this.props.user.cart,\n                product: {\n                    name: name,\n                    price: price,\n                    count: 1\n                },\n                updateCount: false\n            }\n            \n            for (let i = 0; i < data.prevCart.length; i++) {\n                if (data.prevCart[i].name === data.product.name) {\n                    data.updateCount = true;\n                }\n            }\n\n            let updatedAcc;\n            if (!data.updateCount) {\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: this.props.user.cart.concat(data.product)\n                }\n            } else {\n                let element;\n                for (let i = 0; i < this.props.user.cart.length; i++) {\n                    if (this.props.user.cart[i].name === data.product.name) {\n                        element = i;\n                    }\n                }\n                let newAcc = this.props.user.cart;\n                newAcc[element].count += 1;\n                updatedAcc = {\n                    ...this.props.user,\n                    cart: newAcc\n                }\n            }\n            \n\n            axios.patch(`https://onlinestoreserver.herokuapp.com/users/${this.props.user.id}/addProduct`, data)\n            .then(response => {\n                console.log(response);\n                this.props.onUpdateCart(updatedAcc);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    removeHandler(name, price) {\n        let data = {\n            prevCart: this.props.user.cart,\n            product: {\n                name: name,\n                price: price,\n                count: 1\n            },\n            updateCount: false\n        }\n        let cartArray = this.props.user.cart;\n\n        let index2 = -1;\n        for (let i = 0; i < cartArray.length; i++) {\n            if (cartArray[i].name === data.product.name) {\n                index2 = i;\n                if (cartArray[i].count > 1) {\n                    data.updateCount = true\n                }\n            }\n        }\n        if (!data.updateCount) {\n            if (index2 >= 0) {\n                cartArray.splice(index2, 1);\n            }\n        } else {\n            cartArray[index2].count -= 1\n        }\n        \n\n        let updatedAcc = {\n            ...this.props.user,\n            cart: cartArray\n        }\n       \n        //PATCH remove\n        axios.patch(`https://onlinestoreserver.herokuapp.com/users/${this.props.user.id}/removeProduct`, data)\n        .then(response => {\n            console.log(response);\n            this.props.onUpdateCart(updatedAcc);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    imageHandler(item) {\n\n        let imgLibrary = [\n            { name: \"Banana\", img: banana },\n            { name: \"Organic Banana\", img: organicBanana },\n            { name: \"Strawberries\", img: strawberries },\n            { name: \"Blackberries\", img: blackberries },\n            { name: \"Fresh Pineapple\", img: pineapple},\n            { name: \"Red Seedless Grapes\", img: redGrapes },\n            { name: \"Raspberries\", img: raspberries },\n            { name: \"Blueberries\", img: blueberries }\n        ]\n\n        let result = imgLibrary.filter(obj => {\n            return obj.name === item\n        })\n\n        return result[0].img;\n    }\n\n    countHandler(item) {\n        if (this.props.user !== null) {\n            let userCart = this.props.user.cart;\n            let result = -1;\n            for (let i = 0; i < userCart.length; i++) {\n                if (userCart[i].name === item) {\n                    result = userCart[i].count;\n                }\n            }\n            if (result === -1) {\n                return 0;\n            } else {\n                return result;\n            }\n            //return result[0].count;\n        } else {\n            return 0;\n        }\n    }\n\n    render() {\n        let fruitItems = this.state.products;\n        /* for (let i = 0; i < this.state.products.length; i++) {\n            if (this.state.products[i].type === \"Fruit\") {\n                fruitItems.push(this.state.products[i]);\n            }\n        } */\n\n\n        return (\n            <React.Fragment>\n                <div className={classes.Fruit}>\n                    <h3>Fresh Fruit</h3>\n                    <div className={classes.FruitContainer}>\n                        {fruitItems.map((item, index) => {\n                            return <ProductModel name={item.name}\n                            type={item.type}\n                            price={item.price}\n                            key={item._id}\n                            add={() => this.addHandler(item.name, item.price)}\n                            remove={() => this.removeHandler(item.name, item.price)}\n                            count={this.countHandler(item.name)}\n                            img={this.imageHandler(item.name)}\n                            />;\n                        })}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.activeUser,\n        productsArr: state.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCart: (account) => dispatch({type: actionTypes.UPDATE_CART, account})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fruit);"]},"metadata":{},"sourceType":"module"}